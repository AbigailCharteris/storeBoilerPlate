import requestScenarioVersionsFulfilledAction from './../actions/requestScenarioVersionsFulfilledAction';
import { REQUEST_SCENARIO_VERSIONS } from './../constants/actionTypes';
import { SCENARIO_ID } from './../constants/stateConstants';
import batchManagementApiFactory from './../shared/batchManagementApiFactory';
import { adaptScenarioVersionDetail } from './../shared/datasourceAdapters';

const getScenarioVersionsEpic = (action$, { getState }) =>
  action$.ofType(REQUEST_SCENARIO_VERSIONS).mergeMap($action => {
    const id = $action.payload[SCENARIO_ID];

    const api = batchManagementApiFactory(getState());

    const apiStream = api
      .requestScenarioVersionList(id)
      .map(adaptScenarioVersionDetail)
      .map(requestScenarioVersionsFulfilledAction);

    return apiStream;
  });

export default getScenarioVersionsEpic;
