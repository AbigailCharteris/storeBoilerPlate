import { Observable } from 'rxjs';
import requestScenariosFulfilledAction from './../actions/requestScenariosFulfilledAction';
import requestBatchesFulfilledAction from './../actions/requestBatchesFulfilledAction';
import { REQUEST_BATCHES } from './../constants/actionTypes';
import batchManagementApiFactory from './../shared/batchManagementApiFactory';
import {
  adaptBatchList,
  adaptScenarioList,
} from '../shared/datasourceAdapters';

const getScenariosEpic = (action$, { getState }) =>
  action$.ofType(REQUEST_BATCHES).mergeMap(() => {
    const api = batchManagementApiFactory(getState());

    const scenariosStream = api
      .requestScenarioList()
      .map(adaptScenarioList)
      .map(requestScenariosFulfilledAction);

    const batchesStream = api
      .requestBatchList()
      .map(adaptBatchList)
      .map(requestBatchesFulfilledAction);

    return Observable.concat(scenariosStream, batchesStream);
  });

export default getScenariosEpic;
