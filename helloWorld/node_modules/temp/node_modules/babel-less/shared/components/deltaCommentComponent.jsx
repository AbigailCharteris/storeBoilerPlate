import PropTypes from 'prop-types';
import React from 'react';
import { FormGroup, ControlLabel, FormControl } from 'react-bootstrap';

const DeltaCommentComponent = ({
  deltaComment,
  exsitingComment,
  updateDeltaComment,
  predicate,
  commentRequiredLength,
}) => {
  const mergedDeltaComment =
    deltaComment !== '' ? deltaComment : exsitingComment;

  const deltaCommentInValid =
    !predicate &&
    mergedDeltaComment !== undefined &&
    mergedDeltaComment.length < commentRequiredLength;

  const dirtyStatus = deltaCommentInValid ? 'error' : 'success';
  const deltaStatus = predicate ? null : dirtyStatus;

  return (
    <div>
      <FormGroup validationState={deltaStatus}>
        <ControlLabel>
          Reason for change<font color="red"> *</font>
        </ControlLabel>
        <FormControl
          type="text"
          id="batchComment"
          value={mergedDeltaComment}
          onChange={updateDeltaComment}
          maxLength={255}
          disabled={predicate}
        />
        <FormControl.Feedback />
      </FormGroup>
      {deltaStatus === 'error' ? (
        <span style={{ color: 'red', fontSize: '8pt' }}>
          {'Minimum 20 characters are required'}
        </span>
      ) : null}
    </div>
  );
};

DeltaCommentComponent.propTypes = {
  deltaComment: PropTypes.string.isRequired,
  exsitingComment: PropTypes.string.isRequired,
  updateDeltaComment: PropTypes.func.isRequired,
  predicate: PropTypes.bool,
  commentRequiredLength: PropTypes.number,
};

DeltaCommentComponent.defaultProps = {
  deltaComment: '',
  exsitingComment: '',
  updateDeltaComment: undefined,
  predicate: true,
  commentRequiredLength: 20,
};

export default DeltaCommentComponent;
