import _ from 'lodash';
import React from 'react';
import { Glyphicon, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';
import PropTypes from 'prop-types';

class GlyphButton extends React.PureComponent {
  constructor(props) {
    super(props);
    this.onClick = this.onClick.bind(this);
  }

  onClick(e) {
    e.stopPropagation();
    this.props.onCellClicked();
  }

  icon() {
    const {
      onCellClicked,
      iconName,
      tooltipText,
      className,
      iconOnly,
    } = this.props;
    const tooltip = <Tooltip id="tooltip">{tooltipText}</Tooltip>;

    return (
      <span onClick={this.onClick}>
        {tooltipText !== '' ? (
          <OverlayTrigger placement="top" overlay={tooltip}>
            <Glyphicon
              glyph={iconName}
              onClick={this.onClick}
              className={className}
            />
          </OverlayTrigger>
        ) : (
          <Glyphicon glyph={iconName} onClick={this.onClick} />
        )}
      </span>
    );
  }

  button() {
    const {
      onCellClicked,
      iconName,
      tooltipText,
      className,
      iconOnly,
      buttonText,
    } = this.props;
    const tooltip = <Tooltip id="tooltip">{tooltipText}</Tooltip>;
    return (
      <Button style={{ height: '35px' }} onClick={this.onClick}>
        {buttonText !== undefined ? `${buttonText} ` : null}
        <OverlayTrigger placement="top" overlay={tooltip}>
          <Glyphicon glyph={iconName} className={className} />
        </OverlayTrigger>
      </Button>
    );
  }

  render() {
    return this.props.iconOnly ? this.icon() : this.button();
  }
}

GlyphButton.propTypes = {
  iconName: PropTypes.string,
  tooltipText: PropTypes.string,
  onCellClicked: PropTypes.func,
  className: PropTypes.string,
  buttonText: PropTypes.string,
  iconOnly: PropTypes.bool,
};

GlyphButton.defaultProps = {
  iconName: undefined,
  tooltipText: undefined,
  onCellClicked: _.noop,
  className: undefined,
  buttonText: undefined,
  iconOnly: false,
};

export default GlyphButton;
