import classNames from 'classnames';
import React, { Component, PropTypes } from 'react';
import { ThemeProvider } from 'react-css-themr';
// eslint-disable-next-line import/no-unresolved
import reactToolboxTheme from 'react-toolbox/tmp/theme.json';
import Checkbox from 'react-toolbox/lib/checkbox/Checkbox';

const isCheckedBinding = 'isCheckedBinding';
export const NODEBINDING = 'NODE_BINDING';
export const FIELDBINDING = 'FIELD_BINDING';

class CheckboxCell extends Component {
  constructor(props) {
    super(props);

    this.onChange = this.onChange.bind(this);
  }

  onChange(value) {
    const { api, rowIndex, node } = this.props.cellProps.params;

    if (value) {
      api.selectIndex(rowIndex, true);
    } else {
      api.deselectIndex(rowIndex);
    }

    this.forceUpdate();

    if (this.props.callBack) this.props.callBack(node.data);
  }

  render() {
    const props = this.props.cellProps;
    const { api, node } = props.params;
    const { isSelectedBinding, isCheckedBindingName, className } = this.props;

    const checked =
      isSelectedBinding === NODEBINDING
        ? api.selectionController.isNodeSelected(node)
        : node.data[isCheckedBindingName];

    return (
      <ThemeProvider theme={reactToolboxTheme}>
        <Checkbox
          className={classNames('checkbox-cell', className)}
          checked={checked}
          onChange={this.onChange}
        />
      </ThemeProvider>
    );
  }
}

CheckboxCell.propTypes = {
  isSelectedBinding: PropTypes.string,
  isCheckedBindingName: PropTypes.string,
  callBack: PropTypes.func,
  className: PropTypes.string,
  cellProps: PropTypes.objectOf(),
};

CheckboxCell.defaultProps = {
  isSelectedBinding: '',
  isCheckedBindingName: '',
  callBack: null,
  className: '',
  cellProps: null,
};
export default CheckboxCell;
