import _ from 'lodash';
import React from 'react';
import PropTypes from 'prop-types';
import {Button, ControlLabel, FieldGroup, FormControl, FormGroup, Glyphicon, InputGroup,} from 'react-bootstrap';

class ScenarioFilePicker extends React.Component {
   constructor() {
      super();

      this.onClick = this.onClick.bind(this);
      this.onChange = this.onChange.bind(this);
      this.state = {fileName: ''};
   }

   onClick() {
      this.fileInput.click();
   }

   onChange({target: {files}}) {
      this.setState({fileName: files.length ? files[0].name : ''});

      if (!files.length) {
         this.props.onChange(null);
         return;
      }

      const reader = new FileReader();

      reader.onload = () =>
         this.props.onChange({
            file: files[0],
            base64: reader.result.match(/base64,(.*)/)[1],
         });

      reader.onerror = error => {
         throw new Error(error);
      };

      reader.readAsDataURL(files[0]);
   }

   render() {
      const {accept, children, required} = this.props;
      const {fileName} = this.state;
      const icon = <i className="fa fa-paperclip scenario-file-picker__icon"/>;
      const inputId = _.uniqueId('scenario-file-picker-');

      return (
         <label htmlFor={inputId} className="scenario-file-picker">
            <FormGroup controlId="ScenarioFile" validationState={null}>
               <ControlLabel>Scenario File</ControlLabel>
               <InputGroup>
                  <FormControl
                     type="text"
                     readOnly
                     value={fileName}
                     onClick={this.onClick}
                  />
                  <InputGroup.Button>
                     <Button onClick={this.onClick}>
                        <Glyphicon glyph="paperclip"/>
                     </Button>
                  </InputGroup.Button>
               </InputGroup>
            </FormGroup>
            <input
               id={inputId}
               style={{display: 'none'}}
               ref={input => {
                  this.fileInput = input;
               }}
               type="file"
               accept={accept}
               onChange={this.onChange}
            />
         </label>
      );
   }
}

ScenarioFilePicker.defaultProps = {
   accept: undefined,
   required: false,
   onChange: _.noop,
};

ScenarioFilePicker.propTypes = {
   accept: PropTypes.string,
   required: PropTypes.bool,
   onChange: PropTypes.func,
};

export default ScenarioFilePicker;
