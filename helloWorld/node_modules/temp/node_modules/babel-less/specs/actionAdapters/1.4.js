import { assert, expect } from 'chai';
import {
  fromModel,
  toModel,
} from '../../actionAdapters/requestScenariosFulfilledAdapter';
import {
  SCENARIO_LIST,
  SCENARIO_LIST_NO_DATA,
} from '../../constants/stateConstants';

describe('requestScenariosFulfilledAdapterSpec', () => {
  it('fromModel: should provide default', () => {
    const providedAction = { payload: {} };

    const state = fromModel(providedAction);

    expect(state).to.deep.equal({
      [SCENARIO_LIST]: SCENARIO_LIST_NO_DATA,
    });
  });

  it('fromModel: should override default with data', () => {
    const actualScenarioList = ['test'];

    const providedAction = {
      payload: { [SCENARIO_LIST]: actualScenarioList },
    };

    const state = fromModel(providedAction);

    expect(state).to.deep.equal({
      [SCENARIO_LIST]: actualScenarioList,
    });
  });

  it('toModel: should generate redux payload', () => {
    const actualScenarioList = ['test'];

    const expectedAction = {
      payload: { [SCENARIO_LIST]: actualScenarioList },
    };

    const state = toModel(actualScenarioList);

    expect(state).to.deep.equal(expectedAction);
  });
});
